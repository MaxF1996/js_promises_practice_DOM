{"mappings":"ACEA,IAAM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAU,CAAA,EACR,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,YAAY,CAAC,UAAW,gBAEhC,IAAM,EAAc,WAClB,EAAU,CAAA,EACV,EAAQ,GAER,SAAS,mBAAmB,CAAC,QAAS,GACtC,EAAoB,EACtB,EAEA,SAAS,gBAAgB,CAAC,QAAS,GAEnC,WAAW,WACJ,IACH,EAAO,GACP,SAAS,mBAAmB,CAAC,QAAS,GACtC,EAAoB,GAExB,EAAG,IACL,GAEA,SAAS,EAAoB,CAAO,EAClC,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAa,WAAW,CAAG,6BAC3B,EAAa,SAAS,CAAC,GAAG,CAAC,UAC7B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAa,WAAW,CAAG,6BAC3B,EAAa,SAAS,CAAC,GAAG,CAAC,QAC7B,GACC,OAAO,CAAC,WACP,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EACJ,CAEA,IAAM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,IAAM,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,YAAY,CAAC,UAAW,gBAEhC,CAAC,QAAS,cAAc,CAAC,OAAO,CAAC,SAAC,CAAV,EACtB,SAAS,gBAAgB,CAAC,EAAU,WAClC,EAAQ,GAOZ,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAa,WAAW,CAAG,8BAC3B,EAAa,SAAS,CAAC,GAAG,CAAC,UAC7B,GACC,OAAO,CAAC,WACP,SAAS,IAAI,CAAC,WAAW,CAZJ,EAavB,EAZA,EACF,EACF,GAaM,EAAe,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAI,EAAc,CAAA,EACd,EAAe,CAAA,EACb,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,YAAY,CAAC,UAAW,gBAEhC,CAAC,QAAS,cAAc,CAAC,OAAO,CAAC,SAAC,CAAV,EACtB,SAAS,gBAAgB,CAAC,EAAU,SAAC,CAArC,EACiB,UAAX,EAAE,IAAI,EACR,CAAA,EAAc,CAAA,CADhB,EAIe,gBAAX,EAAE,IAAI,EACR,CAAA,EAAe,CAAA,CADjB,EAII,GAAe,IACjB,EAAQ,GAQd,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAa,WAAW,CAAG,6BAC3B,EAAa,SAAS,CAAC,GAAG,CAAC,UAC7B,GACC,OAAO,CAAC,WACP,SAAS,IAAI,CAAC,WAAW,CAbH,EAcxB,GAZA,EACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar firstPromise = new Promise(function(resolve, reject) {\n    var clicked = false;\n    var massage = document.createElement(\"div\");\n    massage.setAttribute(\"data-qa\", \"notification\");\n    var handleClick = function() {\n        clicked = true;\n        resolve(massage);\n        document.removeEventListener(\"click\", handleClick);\n        firstPromiseHandler(massage);\n    };\n    document.addEventListener(\"click\", handleClick);\n    setTimeout(function() {\n        if (!clicked) {\n            reject(massage);\n            document.removeEventListener(\"click\", handleClick);\n            firstPromiseHandler(massage);\n        }\n    }, 3000);\n});\nfunction firstPromiseHandler(massage) {\n    firstPromise.then(function(notification) {\n        notification.textContent = \"First promise was resolved\";\n        notification.classList.add(\"success\");\n    }).catch(function(notification) {\n        notification.textContent = \"First promise was rejected\";\n        notification.classList.add(\"error\");\n    }).finally(function() {\n        document.body.appendChild(massage);\n    });\n}\nvar secondPromise = new Promise(function(resolve) {\n    var massage = document.createElement(\"div\");\n    massage.setAttribute(\"data-qa\", \"notification\");\n    [\n        \"click\",\n        \"contextmenu\"\n    ].forEach(function(oneEvent) {\n        document.addEventListener(oneEvent, function() {\n            resolve(massage);\n            secondPromiseHandler(massage);\n        });\n    });\n});\nfunction secondPromiseHandler(massage) {\n    secondPromise.then(function(notification) {\n        notification.textContent = \"Second promise was resolved\";\n        notification.classList.add(\"success\");\n    }).finally(function() {\n        document.body.appendChild(massage);\n    });\n}\nvar thirdPromise = new Promise(function(resolve) {\n    var leftClicked = false;\n    var rightClicked = false;\n    var massage = document.createElement(\"div\");\n    massage.setAttribute(\"data-qa\", \"notification\");\n    [\n        \"click\",\n        \"contextmenu\"\n    ].forEach(function(oneEvent) {\n        document.addEventListener(oneEvent, function(e) {\n            if (e.type === \"click\") leftClicked = true;\n            if (e.type === \"contextmenu\") rightClicked = true;\n            if (leftClicked && rightClicked) {\n                resolve(massage);\n                thirdPromiseHandler(massage);\n            }\n        });\n    });\n});\nfunction thirdPromiseHandler(massage) {\n    thirdPromise.then(function(notification) {\n        notification.textContent = \"Third promise was resolved\";\n        notification.classList.add(\"success\");\n    }).finally(function() {\n        document.body.appendChild(massage);\n    });\n}\n\n//# sourceMappingURL=index.7775a043.js.map\n","'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  let clicked = false;\n  const massage = document.createElement('div');\n\n  massage.setAttribute('data-qa', 'notification');\n\n  const handleClick = () => {\n    clicked = true;\n    resolve(massage);\n\n    document.removeEventListener('click', handleClick);\n    firstPromiseHandler(massage);\n  };\n\n  document.addEventListener('click', handleClick);\n\n  setTimeout(() => {\n    if (!clicked) {\n      reject(massage);\n      document.removeEventListener('click', handleClick);\n      firstPromiseHandler(massage);\n    }\n  }, 3000);\n});\n\nfunction firstPromiseHandler(massage) {\n  firstPromise\n    .then((notification) => {\n      notification.textContent = 'First promise was resolved';\n      notification.classList.add('success');\n    })\n    .catch((notification) => {\n      notification.textContent = 'First promise was rejected';\n      notification.classList.add('error');\n    })\n    .finally(() => {\n      document.body.appendChild(massage);\n    });\n}\n\nconst secondPromise = new Promise((resolve) => {\n  const massage = document.createElement('div');\n\n  massage.setAttribute('data-qa', 'notification');\n\n  ['click', 'contextmenu'].forEach((oneEvent) => {\n    document.addEventListener(oneEvent, () => {\n      resolve(massage);\n      secondPromiseHandler(massage);\n    });\n  });\n});\n\nfunction secondPromiseHandler(massage) {\n  secondPromise\n    .then((notification) => {\n      notification.textContent = 'Second promise was resolved';\n      notification.classList.add('success');\n    })\n    .finally(() => {\n      document.body.appendChild(massage);\n    });\n}\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftClicked = false;\n  let rightClicked = false;\n  const massage = document.createElement('div');\n\n  massage.setAttribute('data-qa', 'notification');\n\n  ['click', 'contextmenu'].forEach((oneEvent) => {\n    document.addEventListener(oneEvent, (e) => {\n      if (e.type === 'click') {\n        leftClicked = true;\n      }\n\n      if (e.type === 'contextmenu') {\n        rightClicked = true;\n      }\n\n      if (leftClicked && rightClicked) {\n        resolve(massage);\n        thirdPromiseHandler(massage);\n      }\n    });\n  });\n});\n\nfunction thirdPromiseHandler(massage) {\n  thirdPromise\n    .then((notification) => {\n      notification.textContent = 'Third promise was resolved';\n      notification.classList.add('success');\n    })\n    .finally(() => {\n      document.body.appendChild(massage);\n    });\n}\n"],"names":["firstPromise","Promise","resolve","reject","clicked","massage","document","createElement","setAttribute","handleClick","removeEventListener","firstPromiseHandler","addEventListener","setTimeout","then","notification","textContent","classList","add","catch","finally","body","appendChild","secondPromise","forEach","oneEvent","thirdPromise","leftClicked","rightClicked","e","type"],"version":3,"file":"index.7775a043.js.map"}